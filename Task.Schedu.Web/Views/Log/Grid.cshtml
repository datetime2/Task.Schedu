@inherits Nancy.ViewEngines.Razor.NancyRazorViewBase
@{
    ViewBag.Title = "日志列表";
}
@section style{
    <!-- jqgrid-->
    <link href="~/Content/Css/plugins/jqgrid/ui.jqgrid.css" rel="stylesheet">
}

<div class="row-fluid clearfix bb-1 mb10" id="input_custom_searchbox">
    <div class="col-sm-5 pl0">
        <div class="input-group">
            <span class="input-group-addon">日志列表</span>
            <input type="text" class="form-control" id="txt_LogName">
        </div>

    </div>
    <div class="col-sm-5  pl0">
        <div class="input-group">
            <span class="input-group-addon">创建时间</span>
            <div class="input-group col-sm-12 ">
                <input type="text" class="form-control col-sm-6  layer-date" name="start" id="txt_createStart" />
                <span class="input-group-addon" style="border-left:none; border-right:0;">到</span>
                <input type="text" class="form-control col-sm-6  layer-date" name="end" id="txt_createEnd" />
            </div>
        </div>
    </div>
    <div class="col-sm-2 pl0">
        <button class="btn btn-primary" id="btn_search">搜索</button>
    </div>
</div>

<!-- 查询条件 -->
<div class="searchbox"></div>
<!-- 列表 -->
<table id="grid_Log"></table>

@section scripts{
    <!-- jqGrid -->
    <script src="~/Content/Scripts/plugins/jqgrid/i18n/grid.locale-cn.js"></script>
    <script src="~/Content/Scripts/plugins/jqgrid/jquery.jqGrid.min.js"></script>
    <script src="~/Content/Scripts/plugins/layer/laydate/laydate.js"></script>
    <script>
        var gridLog = null;
        $(function () {
            //初始化查询控件
            initSearchBox();
            //初始化数据
            initData();
            //事件绑定
            bindEvents();
        });

        //初始化搜索框
        function initSearchBox() {
            var options = {
                //查询事件
                "search": function (paramList) {
                    gridLog.load(handleParam(paramList));
                },
                //默认展开条件数
                "expandRow": 2,
                //查询条件
                "searchBoxs": [
                     {
                         "id": "TableName",
                         "isMultiple": false,
                         "title": "日志类型",
                         "data": [
                             { "value": "t_OrderLog", "text": "订单" },
                             { "value": "t_ProductLog", "text": "商品" }
                         ]
                     }
                ]
            };
            $(".searchbox").search(options);

            //日期范围限制
            var start = {
                elem: '#txt_createStart',
                format: 'YYYY-MM-DD hh:mm:ss',
                max: laydate.now(),
                istime: true,
                istoday: true,
                choose: function (datas) {
                    end.min = datas; //开始日选好后，重置结束日的最小日期
                }
            };
            var end = {
                elem: '#txt_createEnd',
                format: 'YYYY-MM-DD hh:mm:ss',
                max: laydate.now(),
                istime: true,
                istoday: true,
                choose: function (datas) {
                    start.max = datas; //结束日选好后，重置开始日的最大日期
                }
            };
            laydate(start);
            laydate(end);
        }

        //初始化数据
        function initData() {
            //初始化表格控件
            gridLog = new Schedu.Grid("grid_Log", {
                idField: "LogId",
                height: $(window).height() - 180,
                url: "/Log/PostQuery",
                multiselect: true,
                rownumbers: true,
                colNames: ['编号', '类型', '描述', '创建时间'],
                colModel: [
                     {
                         name: 'LogId',
                         index: 'LogId'
                     },

                    {
                        name: 'LogType',
                        index: 'LogType'
                    },
                    {
                        name: 'LogMsg',
                        index: 'LogMsg',
                        fixed: true,
                        width: 300,
                        align: "right"
                    },
                    {
                        name: 'CreatedOn',
                        index: 'CreatedOn',
                        width: 150,
                        align: "center",
                        formatter: "date",
                        fixed: true,
                        formatoptions: { srcformat: 'Y-m-d H:i:s', newformat: 'Y-m-d H:i:s' }
                    }]
            });
        }

        //处理查询参数
        function handleParam(paramList) {
            var FilterList = [];
            //描述
            var strLogMsg = $("#txt_LogMsg").val().trim();
            if (strLogMsg) {
                FilterList.push({ "Operator": "like", "FieldName": "LogMsg", "FieldValue": strLogMsg });
            }
            //创建时间
            var strCreateStart = $("#txt_createStart").val().trim();
            if (strCreateStart) {
                FilterList.push({ "Operator": "ge", "FieldName": "CreatedOn", "FieldValue": strCreateStart, "IsDateTime": true });
            }
            var strCreateEnd = $("#txt_createEnd").val().trim();
            if (strCreateEnd) {
                FilterList.push({ "Operator": "le", "FieldName": "CreatedOn", "FieldValue": strCreateEnd, "IsDateTime": true });
            }

            var item = null;
            var value = null;
            //时间范围
            for (var i = 0, length = paramList.length; i < length; i++) {
                item = paramList[i];
                value = null;
                switch (item.id) {
                    case "IsDisabled":
                        if (item.ValueList.length > 0) {
                            value = { "Operator": "eq", "FieldName": "IsDisabled", "FieldValue": item.ValueList.join(",") };
                            FilterList.push(value);
                        }
                        break;
                        //任务状态
                    case "Status":
                        if (item.ValueList.length > 0) {
                            value = { "Operator": "eq", "FieldName": "Status", "FieldValue": item.ValueList.join(",") };
                            FilterList.push(value);
                        }
                        break;
                    default:
                        break;
                }
            }
            return { "FilterListStr": JSON.stringify(FilterList) };
        }

        //事件绑定
        function bindEvents() {
            //搜索
            $("#btn_search").on("click", function () {
                var paramList = $(".searchbox").getParamList();
                gridLog.load(handleParam(paramList));
            });
        }
    </script>
}